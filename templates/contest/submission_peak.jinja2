{% extends 'base.jinja2' %}

{% block title %}
    提交数量分析
{% endblock %}

{% block content %}
    <div class="problem_title_field">
        <h1>{{ contest.title[:30] }}{% if contest.title | length > 30 %}...{% endif %}</h1>
    </div>
    <div class="problem_submissions_field">
        <div class="problem_navbar_field">
            <a class="problem_navbar" href="{{ url('contest:dashboard', args=(contest.id, )) }}">总览</a>
            <a class="problem_navbar" href="{{ url('contest:my_submissions', args=(contest.id, )) }}">我的提交</a>
            <a class="problem_navbar" href="{{ url('contest:submissions', args=(contest.id, )) }}">所有提交</a>
            {% if user.is_superuser or contest.status == 1 %}
                <a class="problem_navbar" href="{{ url('contest:standings', args=(contest.id, )) }}">榜单</a>
            {% endif %}
            {% if user.is_superuser %}
                <a class="problem_navbar" href="{{ url('contest:standings_to_excel', args=(contest.id, )) }}">导出榜单</a>
            {% endif %}
        </div>
        <div class="problem_navbar_fun_field">
            <a class="problem_navbar" href="{{ url('contest:submission_peak', args=(contest.id, )) }}">可视化分析</a>
        </div>
        <div style="width: 100%; margin-top: 80px; text-align: center">
            <h1>提交信息统计图</h1>
            <div id='submission_analyse_picture' style='width:100%; height:500px;'></div>
            <div style="width: 100%; height: 16px;"></div>
            <h1>提交流量峰值图</h1>
            <div id='submission_peak_picture' style="width: 100%; height:500px;"></div>
            <div style="width: 100%; height: 16px;"></div>
            <h1>评测状态饼状图</h1>
            <div id='submission_pie_chart' style='width:100%; height:500px;'></div>
            <div style="width: 100%; height: 16px;"></div>
            <h1>代码长度散点图</h1>
            <div id="code_length_scatter_chart" style='width:100%; height:500px;'></div>
        </div>

    </div>
    <div style="width: 100%; height: 0px; margin: 0; display:inline-block;"></div>
    {% block script %}
        <script src="{{ static('js/echarts.min.js') }}"></script>
        {# 提交信息统计图 #}
        <script>
            //基于准备好的DOM，初始化echarts实例
            var myChart1 = echarts.init(document.getElementById('submission_peak_picture'));
            var base = new Date({{start_time.year}}, {{start_time.month}}, {{start_time.day}}, {{start_time.hour}}, {{start_time.minute}}, 0);
            {#var oneDay = 24 * 3600 * 1000;#}
            var onemin =
            {{ step1 }} *
            1000;  //控制一个单位长度,
            base -= 0
            var date = [];
            var data = {{ times }};
            var n1 = {{ n1 }};
            for (var i = 1; i <= n1; i++) {
                var now = new Date(base += onemin);
                date.push([now.getHours()] + '时' + [now.getMinutes()] + '分' + [now.getSeconds()] + '\'');
            }
            option = {
                tooltip: {
                    trigger: 'axis',
                    position: function (pt) {
                        return [pt[0], '10%'];
                    }
                },
                toolbox: {
                    feature: {
                        dataZoom: {
                            yAxisIndex: 'none'
                        },
                        restore: {},
                        saveAsImage: {}
                    }
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: date
                },
                yAxis: {
                    type: 'value',
                    boundaryGap: [0, '0%']
                },
                dataZoom: [{
                    type: 'inside',
                    start: 0,
                    end: 100
                }, {
                    start: 0,
                    end: 10
                }],
                series: [
                    {
                        name: '流量值',
                        type: 'line',
                        symbol: 'none',
                        sampling: 'lttb',
                        itemStyle: {
                            color: 'rgb(255, 70, 131)'
                        },
                        areaStyle: {
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                offset: 0,
                                color: 'rgb(255, 158, 68)'
                            }, {
                                offset: 1,
                                color: 'rgb(255, 70, 131)'
                            }])
                        },
                        data: data
                    }
                ]
            };
            {#//使用刚指定的配置项和数据显示图表#}
            myChart1.setOption(option);
        </script>

        {# 提交流量峰值图 #}
        <script>
            //基于准备好的DOM，初始化echarts实例
            var myChart2 = echarts.init(document.getElementById('submission_analyse_picture'));
            /////////////////////////////////////////////////////////////////////
            var colors = ['#648fd0', '#8fc274', '#ea9191', 'rgba(231,128,78,0.74)'];
            option = {
                color: colors,
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross'
                    }
                },
                grid: {
                    right: '10%'
                },
                toolbox: {
                    feature: {
                        dataView: {show: true, readOnly: false},
                        restore: {show: true},
                        saveAsImage: {show: true}
                    }
                },
                legend: {
                    data: ['平均成绩', '正确率', '正确提交次数', '总提交次数']
                },
                xAxis: [
                    {
                        type: 'category',
                        axisTick: {
                            alignWithLabel: true
                        },
                        data: {{ problem_name|safe }},
                        axisLabel: {
                            interval: 0,
                            rotate: -25
                        },
                    }
                ],
                yAxis: [
                    {
                        type: 'value',
                        name: '平均成绩',
                        min: 0,
                        max: 100,
                        position: 'right',
                        axisLine: {
                            show: true,
                            lineStyle: {
                                color: colors[0]
                            }
                        },
                        axisLabel: {
                            formatter: '{value} 分'
                        }
                    },
                    {
                        type: 'value',
                        name: '正确率',
                        min: 0,
                        max: 100,
                        position: 'right',
                        offset: 50,
                        axisLine: {
                            show: true,
                            lineStyle: {
                                color: colors[1]
                            }
                        },
                        axisLabel: {
                            formatter: '{value} %'
                        }
                    },
                    {
                        type: 'value',
                        name: '提交次数',
                        min: 0,
                        max: {{ max_submission_times }},
                        position: 'left',
                        axisLine: {
                            show: true,
                            lineStyle: {
                                color: colors[2]
                            }
                        },
                        axisLabel: {
                            formatter: '{value} 次'
                        }
                    },
                ],
                series: [

                    {
                        name: '平均成绩',
                        type: 'line',
                        yAxisIndex: 0,
                        data: {{ average_score|safe }}
                    },
                    {
                        name: '正确率',
                        type: 'line',
                        yAxisIndex: 1,
                        data: {{ correct_radio|safe }}
                    },
                    {
                        name: '正确提交次数',
                        type: 'bar',
                        yAxisIndex: 2,
                        data: {{ correct_submission|safe }},
                    },
                    {
                        name: '总提交次数',
                        type: 'bar',
                        yAxisIndex: 2,
                        data: {{ all_submission|safe }},
                    },
                ]
            };
            //////////////////////////////////////////////////////////////////
            {#//使用刚指定的配置项和数据显示图表#}
            myChart2.setOption(option);
        </script>

        {# 评测状态饼状图 #}
        <script>
            //基于准备好的DOM，初始化echarts实例

            var myChart3 = echarts.init(document.getElementById('submission_pie_chart'));
            setTimeout(function () {
                option = {
                    legend: {
                        date: ['完全正确', '部分正确', '编译错误', '完全错误']
                    },
                    tooltip: {
                        trigger: 'axis',
                        showContent: false
                    },
                    dataset: {
                        source:{{ all_pie_chart|safe }}
                    },
                    xAxis: {
                        type: 'category',
                        axisLabel: {
                            interval: 0,
                            rotate: -25
                        },
                    },
                    yAxis: {gridIndex: 0},
                    grid: {top: '55%'},
                    series: [
                        {
                            type: 'line',
                            smooth: true,
                            seriesLayoutBy: 'row',
                            emphasis: {focus: 'series'},
                            color: '#91cc75'
                        },
                        {
                            type: 'line',
                            smooth: true,
                            seriesLayoutBy: 'row',
                            emphasis: {focus: 'series'},
                            color: '#5673c3'
                        },
                        {
                            type: 'line',
                            smooth: true,
                            seriesLayoutBy: 'row',
                            emphasis: {focus: 'series'},
                            color: '#f4c761'
                        },
                        {
                            type: 'line',
                            smooth: true,
                            seriesLayoutBy: 'row',
                            emphasis: {focus: 'series'},
                            color: '#ec676a'
                        },
                        {
                            type: 'pie',
                            id: 'pie',
                            radius: '30%',
                            center: ['50%', '25%'],
                            emphasis: {focus: 'data'},
                            label: {
                                formatter: '{b}: {@1} ({d}%)'
                            },
                            encode: {
                                itemName: '问题',
                                value: '1',
                                tooltip: '1'
                            },
                            itemStyle: {
                                normal: {
                                    color: function (params) {
                                        let colorList = [
                                            '#91cc75', '#5673c3', '#f4c761', '#ec676a'
                                        ];
                                        return colorList[params.dataIndex]
                                    },
                                }
                            },
                        }
                    ]
                };

                myChart3.on('updateAxisPointer', function (event) {
                    var xAxisInfo = event.axesInfo[0];
                    if (xAxisInfo) {
                        var dimension = xAxisInfo.value + 1;
                        myChart3.setOption({
                            series: {
                                id: 'pie',
                                label: {
                                    formatter: '{b}: {@[' + dimension + ']} ({d}%)'
                                },
                                encode: {
                                    value: dimension,
                                    tooltip: dimension
                                }
                            }
                        });
                    }
                });
                myChart3.setOption(option);
            });
        </script>

        {# 代码长度散点图 #}
        <script>
            // 基于准备好的dom，初始化echarts实例
            var myChart4 = echarts.init(document.getElementById('code_length_scatter_chart'));
            var code_length ={{ pace_length|safe }};
            var problems ={{ scatter_chart_problem_id|safe }};
            var data = {{ code_length_data|safe }};

            option = {
                tooltip: {
                    position: 'top'
                },
                title: [],
                singleAxis: [],
                series: []
            };

            problems.forEach(function (day, idx) {
                option.title.push({
                    textBaseline: 'middle',
                    top: (idx + 0.5) * 100 / 7 + '%',
                    text: day
                });
                option.singleAxis.push({
                    left: 60,
                    type: 'category',
                    boundaryGap: false,
                    data: code_length,
                    top: (idx * 100 / 7 + 5) + '%',
                    height: (100 / 7 - 10) - 2 + '%',
                    axisLabel: {
                        interval: 5
                    }
                });
                option.series.push({
                    singleAxisIndex: idx,
                    coordinateSystem: 'singleAxis',
                    type: 'scatter',
                    data: [],
                    symbolSize: function (dataItem) {
                        return dataItem[1];
                    }
                });
            });

            data.forEach(function (dataItem) {
                option.series[dataItem[0]].data.push([dataItem[1], dataItem[2]]);
            });

            myChart4.setOption(option);
        </script>
    {% endblock %}
{% endblock %}
